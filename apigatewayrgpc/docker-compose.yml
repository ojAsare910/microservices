
services:
  eureka-server:
    build:
      context: ./eureka-server/
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - grpc-network

  grpc-server:
    build:
      context: ./product/
      dockerfile: Dockerfile
    container_name: grpc-server
    ports:
      - "8081:8081"
      - "9090:9090"
    depends_on:
      - eureka-server
      - rabbitmq
      - postgres
    networks:
      - grpc-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: 'true'
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/product
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password123

  grpc-client:
    build:
      context: ./order-service/
      dockerfile: Dockerfile
    container_name: grpc-client
    ports:
      - "8082:8082"
    depends_on:
      - grpc-server
      - eureka-server
      - rabbitmq
      - postgres
    networks:
      - grpc-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: 'true'
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password123
      RABBITMQ_QUEUE_NAME: product_queue

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: testGuest
      RABBITMQ_DEFAULT_PASS: testGuest
    networks:
      - grpc-network

  postgres:
    image: postgres:alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    networks:
      - grpc-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  api-gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "9000:9000"
    depends_on:
      - grpc-server
    networks:
      - grpc-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFERIPADDRESS: 'true'

volumes:
  postgres-data:

networks:
  grpc-network:
    driver: bridge